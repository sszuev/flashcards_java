package com.gitlab.sszuev.flashcards.services.impl;

import com.gitlab.sszuev.flashcards.repositories.UserRepository;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import java.util.Optional;

/**
 * Generated by <a href='https://plugins.jetbrains.com/plugin/14946-diffblue-cover-community-edition'>Diffblue</a>
 */
@ContextConfiguration(classes = {RoleMapper.class, UserDetailsServiceImpl.class})
@ExtendWith(SpringExtension.class)
public class UserDetailsServiceImplTest {
    @MockBean
    private RoleMapper roleMapper;

    @Autowired
    private UserDetailsServiceImpl userDetailsServiceImpl;

    @MockBean
    private UserRepository userRepository;

    @Test
    public void testLoadUserByUsername() throws UsernameNotFoundException {
        Mockito.when(this.userRepository.findByLogin(Mockito.anyString())).thenReturn(Optional.empty());
        Mockito.when(this.roleMapper.apply(Mockito.any())).thenReturn(null);
        Assertions.assertThrows(UsernameNotFoundException.class,
                () -> this.userDetailsServiceImpl.loadUserByUsername("janedoe"));
        Mockito.verify(this.userRepository).findByLogin(Mockito.anyString());
    }
}

